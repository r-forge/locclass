\name{predict.osnnet}
\alias{predict.osnnet}
\title{Predict New Examples Based on Observation Specific Neural Netwoks}
\usage{
  \method{predict}{osnnet} (object, newdata,
    type = c("raw", "class"), ...)
}
\arguments{
  \item{object}{Object of class \code{"osnnet"}.}

  \item{newdata}{A \code{data.frame} of cases to be
  classified or, if \code{object} has a \code{formula}, a
  \code{data.frame} with columns of the same names as the
  variables used. A vector will be interpreted as a row
  vector. If \code{newdata} is missing, an attempt will be
  made to retrieve the data used in \code{\link{osnnet}}.}

  \item{type}{Type of output.}

  \item{\dots}{Arguments passed to or from other methods.}
}
\value{
  If \code{type = "raw"}, the matrix of values returned by
  the trained network; if \code{type = "class"}, the
  corresponding class (which is probably only useful if the
  net was generated by \code{\link{osnnet.formula}}).
}
\description{
  Predict new examples in conjunction with
  \code{\link{osnnet}}.
}
\details{
  This function is a method for the generic function
  \code{predict()} for class \code{"osnnet"}. It can be
  invoked by calling \code{predict(x)} for an object
  \code{x} of the appropriate class, or directly by calling
  \code{predict.osnnet(x)} regardless of the class of the
  object.

  If the response in \code{formula} is a factor,
  appropriate classification networks are constructed;
  these have one output and entropy fit if the number of
  levels is two, and a number of outputs equal to the
  number of classes and a softmax output stage for more
  levels.  If the response is not a factor, it is passed on
  unchanged to \code{predict.osnnet}.

  Optimization is done via the BFGS method of
  \code{\link{optim}}.
}
\seealso{
  \code{\link{osnnet}}, \code{\link[nnet]{predict.nnet}},
  \code{\link[nnet]{nnet}}.
}
\keyword{neural}

